Creating the model
-----------------------------
import pandas as pd
from sklearn.tree import DecisionTreeRegressor

iowa_file_path = "../input/home-data-for-ml-course/train.csv"

home_data = pd.read_csv(iowa_file_path)
y = home_data.SalePrice
feature_columns =['LotArea','YearBuilt','1stFlrSF','2ndFlrSF','FullBath']
X= home_data[feature_columns]

iowa_model = DecisionTreeRegressor()
iowa_model.fit(X,y)

print(f"First in-sample predictions {iowa_model.predict(X.head())}")
print(f"Actual target values for those homes {y.head().tolist}")
--------------------------------------------------------------------

Finding the Mean Absolute Error with validation data
-----------------------------------------------------
from sklearn.model_selection import train_test_split

train_X, val_X, train_y, val_y = train_test_split(X, y, random_state = 0)

melbourn_model = DecisionTree Regressor()

melbourn_model.fit(train_X, train_y)

val_prediction = melbourne_model.predict(val_X)
print(mean_absolute_error(val_y, val_predictions))
------------------------------------------------------------------------

Function to find the best max. Leaf nodes
-----------------------------------------------------------
from sklearn.metrics import mean_absolute_error
from sklearn.tree import DecisionTreeRegressor

def get_mae(max_leaf_nodes, train_X, val_X, train_y, val_y)
  model = DecisionTreeRegressor(max_leaf_nodes, random_state=0)
  model.fit(train_X, train_y)
  preds_val = model.predict(val_X)
  mae = mean_absolute_error(val_y, preds_val)
  return(mae)
------------------------------------------------------------------


